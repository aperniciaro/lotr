// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using lotr;

namespace lotr.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190325185039_AddedNavigationProps")]
    partial class AddedNavigationProps
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("lotr.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("HasWieldedOneRing");

                    b.Property<string>("Name");

                    b.Property<string>("Profession");

                    b.Property<int?>("RaceId");

                    b.Property<string>("Residence");

                    b.Property<string>("WeaponOfChoice");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("lotr.Models.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsImmortal");

                    b.Property<string>("NativeLanguage");

                    b.Property<string>("RaceName");

                    b.HasKey("Id");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("lotr.Models.Character", b =>
                {
                    b.HasOne("lotr.Models.Race", "Race")
                        .WithMany("Characters")
                        .HasForeignKey("RaceId");
                });
#pragma warning restore 612, 618
        }
    }
}
